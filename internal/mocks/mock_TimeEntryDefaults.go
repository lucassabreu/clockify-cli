// Code generated by mockery v2.40.3. DO NOT EDIT.

package mocks

import (
	defaults "github.com/lucassabreu/clockify-cli/pkg/cmd/time-entry/util/defaults"
	mock "github.com/stretchr/testify/mock"
)

// MockTimeEntryDefaults is an autogenerated mock type for the TimeEntryDefaults type
type MockTimeEntryDefaults struct {
	mock.Mock
}

type MockTimeEntryDefaults_Expecter struct {
	mock *mock.Mock
}

func (_m *MockTimeEntryDefaults) EXPECT() *MockTimeEntryDefaults_Expecter {
	return &MockTimeEntryDefaults_Expecter{mock: &_m.Mock}
}

// Read provides a mock function with given fields:
func (_m *MockTimeEntryDefaults) Read() (defaults.DefaultTimeEntry, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Read")
	}

	var r0 defaults.DefaultTimeEntry
	var r1 error
	if rf, ok := ret.Get(0).(func() (defaults.DefaultTimeEntry, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() defaults.DefaultTimeEntry); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(defaults.DefaultTimeEntry)
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockTimeEntryDefaults_Read_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Read'
type MockTimeEntryDefaults_Read_Call struct {
	*mock.Call
}

// Read is a helper method to define mock.On call
func (_e *MockTimeEntryDefaults_Expecter) Read() *MockTimeEntryDefaults_Read_Call {
	return &MockTimeEntryDefaults_Read_Call{Call: _e.mock.On("Read")}
}

func (_c *MockTimeEntryDefaults_Read_Call) Run(run func()) *MockTimeEntryDefaults_Read_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockTimeEntryDefaults_Read_Call) Return(_a0 defaults.DefaultTimeEntry, _a1 error) *MockTimeEntryDefaults_Read_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockTimeEntryDefaults_Read_Call) RunAndReturn(run func() (defaults.DefaultTimeEntry, error)) *MockTimeEntryDefaults_Read_Call {
	_c.Call.Return(run)
	return _c
}

// Write provides a mock function with given fields: _a0
func (_m *MockTimeEntryDefaults) Write(_a0 defaults.DefaultTimeEntry) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for Write")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(defaults.DefaultTimeEntry) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockTimeEntryDefaults_Write_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Write'
type MockTimeEntryDefaults_Write_Call struct {
	*mock.Call
}

// Write is a helper method to define mock.On call
//   - _a0 defaults.DefaultTimeEntry
func (_e *MockTimeEntryDefaults_Expecter) Write(_a0 interface{}) *MockTimeEntryDefaults_Write_Call {
	return &MockTimeEntryDefaults_Write_Call{Call: _e.mock.On("Write", _a0)}
}

func (_c *MockTimeEntryDefaults_Write_Call) Run(run func(_a0 defaults.DefaultTimeEntry)) *MockTimeEntryDefaults_Write_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(defaults.DefaultTimeEntry))
	})
	return _c
}

func (_c *MockTimeEntryDefaults_Write_Call) Return(_a0 error) *MockTimeEntryDefaults_Write_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockTimeEntryDefaults_Write_Call) RunAndReturn(run func(defaults.DefaultTimeEntry) error) *MockTimeEntryDefaults_Write_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockTimeEntryDefaults creates a new instance of MockTimeEntryDefaults. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockTimeEntryDefaults(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockTimeEntryDefaults {
	mock := &MockTimeEntryDefaults{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
